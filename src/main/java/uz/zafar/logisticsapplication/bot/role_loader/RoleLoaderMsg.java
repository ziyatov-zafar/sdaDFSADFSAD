package uz.zafar.logisticsapplication.bot.role_loader;

import org.springframework.stereotype.Controller;
import uz.zafar.logisticsapplication.db.domain.Load;
import uz.zafar.logisticsapplication.db.domain.User;

import java.util.List;

@Controller
public class RoleLoaderMsg {
    public String menu(String lang) {
        if ("uz".equals(lang)) {
            return "üìå Asosiy menyudasiz, o'zingizga kerakli bo'limlardan birini tanlang.";
        } else {
            return "üìå –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º —Ä–∞–∑–¥–µ–ª.";
        }
    }

    public String addLoad(String lang) {
        if ("uz".equals(lang)) {
            return "üìù To‚Äòliq ismingizni kiriting:";
        } else {
            return "üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è:";
        }
    }

    public String notFoundLoad(String lang) {
        if ("uz".equals(lang)) {
            return "‚ùå Sizda yuklar mavjud emas.";
        } else {
            return "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –≥—Ä—É–∑–æ–≤.";
        }
    }


    public static String loadInformation(String lang, Load load) {
        if (load == null) {
            return "<b>‚ö†Ô∏è Ma'lumot topilmadi!</b>\n<b>‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!</b>";
        }

        String info;

        if ("uz".equals(lang)) {
            info = "<b>üì¶ Yuk ma'lumotlari:</b>\n" +
                    "<b>üÜî ID:</b> <code>" + load.getId() + "</code>\n" +
                    "<b>üìç Qayerdan Qayerga:</b> <i>" + load.getToAddressAndFromAddress() + "</i>\n" +
                    "<b>üìå Nomi:</b> <code>" + load.getName() + "</code>\n" +
                    "<b>‚öñ Og'irligi:</b> <code>" + load.getWeight() + " </code>\n" +
                    "<b>üí∞ Narxi:</b> <code>" + load.getPrice() + "</code>\n" +
                    "<b>üöõ Mashina soni:</b> <code>" + load.getCarCount() + "</code>\n" +
                    "<b>üë§ Mas'ul shaxs:</b> <code>" + load.getFullName() + "</code>\n" +
                    "<b>üíµ Avans :</b> <code>" + (load.getIsAdvance() ? "Bor ("+load.getAdvance() + ")" : "Yo‚Äòq") +"</code>\n" +
                    "<b>üí≥ To‚Äòlov turi:</b> <code>" + load.getPaymentType() + "</code>\n" +
                    "<b>üìû Telefon:</b> <code>" + load.getPhone() + "</code>\n" ;
        } else if ("ru".equals(lang)) {
            info = "<b>üì¶ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–∑–µ:</b>\n" +
                    "<b>üÜî ID:</b> <code>" + load.getId() + "</code>\n" +
                    "<b>üìç –û—Ç–∫—É–¥–∞ –ö—É–¥–∞:</b> <i>" + load.getToAddressAndFromAddress() + "</i>\n" +
                    "<b>üìå –ù–∞–∑–≤–∞–Ω–∏–µ:</b> <code>" + load.getName() + "</code>\n" +
                    "<b>‚öñ –í–µ—Å:</b> <code>" + load.getWeight() + " </code>\n" +
                    "<b>üí∞ –¶–µ–Ω–∞:</b> <code>" + load.getPrice() + "</code>\n" +
                    "<b>üöõ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω:</b> <code>" + load.getCarCount() + "</code>\n" +
                    "<b>üë§ –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –ª–∏—Ü–æ:</b> <code>" + load.getFullName() + "</code>\n" +
                    "<b>üíµ –ê–≤–∞–Ω—Å:</b> <code>" + (load.getIsAdvance() ? "–ï—Å—Ç—å" : "–ù–µ—Ç") + " (" + load.getAdvance() + ")</code>\n" +
                    "<b>üí≥ –¢–∏–ø –æ–ø–ª–∞—Ç—ã:</b> <code>" + load.getPaymentType() + "</code>\n" +
                    "<b>üìû –¢–µ–ª–µ—Ñ–æ–Ω:</b> <code>" + load.getPhone() + "</code>\n" ;
        } else {
            info = "<b>‚ö†Ô∏è Til topilmadi! / –Ø–∑—ã–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>";
        }

        return info;
    }


    public String wrongBtn(String lang) {
        if ("uz".equals(lang)) {
            return "‚ö†Ô∏è Noto‚Äòg‚Äòri tugma bosildi.\n\nüîπ Iltimos, menyudan tegishli tugmani tanlang ";
        } else {
            return "‚ö†Ô∏è –ù–∞–∂–∞—Ç–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–Ω–æ–ø–∫–∞.\n\nüîπ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é";
        }
    }

    public String successDelete(String lang) {
        if ("uz".equals(lang)) {
            return "‚úÖ Muvaffaqiyatli o‚Äòchirildi!";
        } else {
            return "‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!";
        }
    }

    public String noDelete(String lang) {
        if ("uz".equals(lang)) {
            return "‚ùå O‚Äòchirilmadi!";
        } else {
            return "‚ùå –ù–µ —É–¥–∞–ª–µ–Ω–æ!";
        }
    }


    public String requestDelete(String lang) {
        if ("uz".equals(lang)) {
            return "‚ùó Ushbu yuk haqiqatdan ham o‚Äòchirilsinmi?";
        } else {
            return "‚ùó –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –≥—Ä—É–∑?";
        }
    }

    public String changeLang(String lang) {
        if (lang.equals("uz")) {
            return "üá∫üáø Til o'zgartirildi ‚úÖ";
        } else {
            return "üá∑üá∫ –Ø–∑—ã–∫ –∏–∑–º–µ–Ω—ë–Ω ‚úÖ";
        }
    }

    public String toAddressAndFromAddress(String lang) {
        return lang.equals("uz")
                ? "üìç Yukingiz qayerdan qayerga olib boriladi?"
                : "üìç –û—Ç–∫—É–¥–∞ –∏ –∫—É–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω –≤–∞—à –≥—Ä—É–∑?";
    }

    public String requestLoadName(String lang) {
        if ("uz".equals(lang)) {
            return "üì¶ Yuk nomini kiriting:";
        } else {
            return "üì¶ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–∑–∞:";
        }
    }

    public String requestLoadWeight(String lang) {
        if ("uz".equals(lang)) {
            return "‚öñÔ∏è Yuk og'irligini kiriting:";
        } else {
            return "‚öñÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–µ—Å –≥—Ä—É–∑–∞:";
        }
    }


    public String requestLoadPrice(String lang) {
        if ("uz".equals(lang)) {
            return "üí∞ Yuk narxini kiriting:";
        } else {
            return "üí∞ –í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –≥—Ä—É–∑–∞:";
        }
    }

    public String requestLoadCarCount(String lang) {
        if ("uz".equals(lang)) {
            return "üöõ Mashinalar sonini kiriting:";
        } else {
            return "üöõ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω:";
        }
    }

    public String requestLoadIsAdvance(String lang) {
        if ("uz".equals(lang)) {
            return "üíµ Avans bormi?";
        } else {
            return "üíµ –ï—Å—Ç—å –ª–∏ –∞–≤–∞–Ω—Å?";
        }
    }

    public String errorCarCount(String lang) {
        if ("uz".equals(lang)) {
            return "‚ö†Ô∏è Iltimos, mashinalar sonini faqat sonlarda kiriting!";
        } else {
            return "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω —Ü–∏—Ñ—Ä–∞–º–∏!";
        }
    }

    public String getAdvancePrice(String lang) {
        if ("uz".equals(lang)) {
            return "üí∞ Avans narxini kiriting:";
        } else {
            return "üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∞–≤–∞–Ω—Å–∞:";
        }
    }

    public String paymentType(String lang) {
        if ("uz".equals(lang)) {
            return "üí≥ To'lov turini kiriting:";
        } else {
            return "üí≥ –í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø –æ–ø–ª–∞—Ç—ã:";
        }
    }

    public String getPhone(String lang) {
        if ("uz".equals(lang)) {
            return "üìû Siz bilan bog'lanish uchun telefon raqamingizni kiriting:";
        } else {
            return "üìû –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏:";
        }
    }

    public String isTrue(String lang) {
        if ("uz".equals(lang)) {
            return "Ushbu yukni qo'shmoqchimisiz?";
        } else {
            return "–í—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ—Ç –≥—Ä—É–∑?";
        }
    }

    public String successAddLoad(String lang) {
        if ("uz".equals(lang)) {
            return "‚úÖ Ushbu yuk muvaffaqiyatli qo'shildi!";
        } else {
            return "‚úÖ –≠—Ç–æ—Ç –≥—Ä—É–∑ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!";
        }
    }
    public String notAddLoad(String lang) {
        if ("uz".equals(lang)) {
            return "‚ùå Ushbu yuk qo'shilmadi!";
        } else {
            return "‚ùå –≠—Ç–æ—Ç –≥—Ä—É–∑ –Ω–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω!";
        }
    }

    public String sendMsgToAdmin(String lang, List<User> admins) {
        List<String> phones = admins.stream().map(User::getHelperPhone).toList();
        StringBuilder phoneNumbers = new StringBuilder();

        for (String phone : phones) {
            phoneNumbers.append(phone).append(" ");
        }

        if (lang.equals("uz")) {
            return """
                Admin bilan bog'lanish uchun quyidagi telefon raqamlariga qo'ng'iroq qilishingiz mumkin:
                
                %s
                """.formatted(phoneNumbers.toString().trim());
        } else if (lang.equals("ru")) {
            return """
                –î–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –Ω–æ–º–µ—Ä–∞–º —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤:
                
                %s
                """.formatted(phoneNumbers.toString().trim());
        } else {
            return "Language not supported";
        }
    }
}
